/* MakeUp Ultra Fast - color_utils.glsl
Usefull data for color manipulation.

Javier Gardu√±o - GNU Lesser General Public License v3.0
*/

// Ambient colors per hour
const vec3 ambient_baselight[25] =
  vec3[25](
  vec3(0.06334842, 0.06696832, 0.05429864), // 6
  vec3(0.06334842, 0.06696832, 0.05429864), // 7
  vec3(0.06334842, 0.06696832, 0.05429864), // 8
  vec3(0.06334842, 0.06696832, 0.05429864), // 9
  vec3(0.06334842, 0.06696832, 0.05429864), // 10
  vec3(0.06334842, 0.06696832, 0.05429864), // 11
  vec3(0.06334842, 0.06696832, 0.05429864), // 12
  vec3(0.06334842, 0.06696832, 0.05429864), // 13
  vec3(0.06334842, 0.06696832, 0.05429864), // 14
  vec3(0.06334842, 0.06696832, 0.05429864), // 15
  vec3(0.06334842, 0.06696832, 0.05429864), // 16
  vec3(0.06334842, 0.06696832, 0.05429864), // 17
  vec3(0.06334842, 0.06696832, 0.05429864), // 18
  vec3(0.06334842, 0.06696832, 0.05429864), // 19
  vec3(0.06334842, 0.06696832, 0.05429864), // 20
  vec3(0.06334842, 0.06696832, 0.05429864), // 21
  vec3(0.06334842, 0.06696832, 0.05429864), // 22
  vec3(0.06334842, 0.06696832, 0.05429864), // 23
  vec3(0.06334842, 0.06696832, 0.05429864), // 24
  vec3(0.06334842, 0.06696832, 0.05429864), // 1
  vec3(0.06334842, 0.06696832, 0.05429864), // 2
  vec3(0.06334842, 0.06696832, 0.05429864), // 3
  vec3(0.06334842, 0.06696832, 0.05429864), // 4
  vec3(0.06334842, 0.06696832, 0.05429864), // 5
  vec3(0.21116139, 0.22322775, 0.18099548)  // 6
  );

  #if MAKEUP_COLOR == 1
    // Sky color per hour
    const vec3 hi_sky_color_array[25] =
      vec3[25](
      vec3(0.3372549 , 0.46666667, 0.81960784), // 6
      vec3(0.21568627, 0.42352941, 1.0), // 7
      vec3(0.21568627, 0.42352941, 1.0), // 8
      vec3(0.21568627, 0.42352941, 1.0), // 9
      vec3(0.21568627, 0.42352941, 1.0), // 10
      vec3(0.21568627, 0.42352941, 1.0), // 11
      vec3(0.21568627, 0.42352941, 1.0), // 12
      vec3(0.21568627, 0.42352941, 1.0), // 1
      vec3(0.21568627, 0.42352941, 1.0), // 2
      vec3(0.21568627, 0.42352941, 1.0), // 3
      vec3(0.21568627, 0.42352941, 1.0), // 4
      vec3(0.21568627, 0.42352941, 1.0), // 5
      vec3(0.3372549 , 0.46666667, 0.81960784), // 6
      vec3(0.05877451, 0.11541176, 0.2725), // 7
      vec3(0.00647058, 0.01270587, 0.03), // 8
      vec3(0.00647058, 0.01270587, 0.03), // 9
      vec3(0.00647058, 0.01270587, 0.03), // 10
      vec3(0.00647058, 0.01270587, 0.03), // 11
      vec3(0.00647058, 0.01270587, 0.03), // 12
      vec3(0.00647058, 0.01270587, 0.03), // 1
      vec3(0.00647058, 0.01270587, 0.03), // 2
      vec3(0.00647058, 0.01270587, 0.03), // 3
      vec3(0.00647058, 0.01270587, 0.03), // 4
      vec3(0.05877451, 0.11541176, 0.2725), // 5
      vec3(0.21568627, 0.42352941, 1.0) // 6
    );

    // Low sky color per hour
    const vec3 low_sky_color_array[25] =
      vec3[25](
      vec3(1.0, 0.50588235, 0.21960784), // 6
      vec3(0.80588236, 0.6882353 , 0.60980392), // 7
      vec3(0.61176471, 0.87058824, 1.0), // 8
      vec3(0.61176471, 0.87058824, 1.0), // 9
      vec3(0.61176471, 0.87058824, 1.0), // 10
      vec3(0.61176471, 0.87058824, 1.0), // 11
      vec3(0.61176471, 0.87058824, 1.0), // 12
      vec3(0.61176471, 0.87058824, 1.0), // 1
      vec3(0.61176471, 0.87058824, 1.0), // 2
      vec3(0.61176471, 0.87058824, 1.0), // 3
      vec3(0.61176471, 0.87058824, 1.0), // 4
      vec3(0.80588236, 0.6882353 , 0.60980392), // 5
      vec3(1.0, 0.50588235, 0.21960784), // 6
      vec3(0.30124182833333335, 0.30124182833333335, 0.30124182833333335), // 7
      vec3(0.01078431, 0.02117647, 0.05), // 8
      vec3(0.01078431, 0.02117647, 0.05), // 9
      vec3(0.01078431, 0.02117647, 0.05), // 10
      vec3(0.01078431, 0.02117647, 0.05), // 11
      vec3(0.01078431, 0.02117647, 0.05), // 12
      vec3(0.01078431, 0.02117647, 0.05), // 1
      vec3(0.01078431, 0.02117647, 0.05), // 2
      vec3(0.01078431, 0.02117647, 0.05), // 3
      vec3(0.01078431, 0.02117647, 0.05), // 4
      vec3(0.30124182833333335, 0.30124182833333335, 0.30124182833333335), // 5
      vec3(1.0, 0.50588235, 0.21960784) // 6
    );

  #endif

// Ambient color luma per hour in exposure calculation
const float ambient_exposure[25] =
  float[25](
  1.0, // 6
  1.0, // 7
  1.0, // 8
  1.0, // 9
  1.0, // 10
  1.0, // 11
  1.0, // 12
  1.0, // 13
  1.0, // 14
  1.0, // 15
  1.0, // 16
  1.0, // 17
  1.0, // 18
  1.0, // 19
  1.0, // 20
  1.0, // 21
  1.0, // 22
  1.0, // 23
  1.0, // 24
  1.0, // 1
  1.0, // 2
  1.0, // 3
  1.0, // 4
  1.0, // 5
  1.0 // 6
  );

// How many sky_color vs. fog_color is used for fog.
const float fog_color_mix[25] =
  float[25](
  1.0, // 6
  1.0, // 7
  1.0, // 8
  1.0, // 9
  1.0, // 10
  1.0, // 11
  1.0, // 12
  1.0, // 13
  1.0, // 14
  1.0, // 15
  1.0, // 16
  1.0, // 17
  1.0, // 18
  1.0, // 19
  1.0, // 20
  1.0, // 21
  1.0, // 22
  1.0, // 23
  1.0, // 24
  1.0, // 1
  1.0, // 2
  1.0, // 3
  1.0, // 4
  1.0, // 5
  1.0 // 6
  );

// Fog parameter per hour
const float fog_density[25] =
  float[25](
  1.0, // 6
  1.0, // 7
  1.0, // 8
  1.0, // 9
  1.0, // 10
  1.0, // 11
  1.0, // 12
  1.0, // 13
  1.0, // 14
  1.0, // 15
  1.0, // 16
  1.0, // 17
  1.0, // 18
  1.0, // 19
  1.0, // 20
  1.0, // 21
  1.0, // 22
  1.0, // 23
  1.0, // 24
  1.0, // 1
  1.0, // 2
  1.0, // 3
  1.0, // 4
  1.0, // 5
  1.0 // 6
  );

// Omni intesity per hour
const float omni_force[25] =
  float[25](
  1.0, // 6
  1.0, // 7
  1.0, // 8
  1.0, // 9
  1.0, // 10
  1.0, // 11
  1.0, // 12
  1.0, // 13
  1.0, // 14
  1.0, // 15
  1.0, // 16
  1.0, // 17
  1.0, // 18
  1.0, // 19
  1.0, // 20
  1.0, // 21
  1.0, // 22
  1.0, // 23
  1.0, // 24
  1.0, // 1
  1.0, // 2
  1.0, // 3
  1.0, // 4
  1.0, // 5
  1.0 // 6
  );

const vec3 candle_baselight = vec3(.666, 0.517129411764706, 0.2664);
